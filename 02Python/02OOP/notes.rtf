{\rtf1\ansi\ansicpg1252\cocoartf1504\cocoasubrtf810
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fswiss\fcharset0 ArialMT;}
{\colortbl;\red255\green255\blue255;\red255\green0\blue0;\red48\green61\blue72;}
{\*\expandedcolortbl;;\csgenericrgb\c100000\c0\c0;\cssrgb\c24314\c30588\c35294;}
\margl1440\margr1440\vieww17340\viewh13380\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\b\fs32 \cf0 ====================\
CREATING A CLASS\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 ====================
\b0\fs24 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\fs28 \cf0 class Human(object): \cf2 # note how we have a single parameter, \'91object\'92\cf0 \
    pass\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\b\fs32 \cf0 ====================\
CREATE A NEW INSTANCE\
====================
\b0\fs24 \

\fs28 michael = Human()\
jimmy = Human()\
\

\b\fs32 ====================\
METHODS\
====================
\b0\fs28 \
def my_function(self):\
	print \'93This is a message in side a class\'94 \
\
class Human(object):\
  def taunt(self):    \cf2  # note how we have a single parameter, 'self'\cf0 \
    print "You want a piece of me?"\
\

\b\fs32 ====================\
\pard\pardeftab720\sl480\sa80\partightenfactor0

\f1 \cf3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3 __init__()
\f0 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 ====================
\b0\fs28 \
class Human(object):\
    
\b def __init__(self):
\b0 \
      print "New Human!!!"     #when we create a new human, we'll get this as an output\
    def taunt(self):\
      print "You want a piece of me?"\
\
\'97\'97\'97\'97\'97\
\
class Human(object):\
    def __init__(self, clan=None):\
      print "New Human!!!"     # when we create a new human, we'll get self as an output\
                               # initialize the clan instance variable by passing in a value\
      self.clan = clan\
      # initialize more attributes that will be the same for all humans\
      self.health = 100\
      self.strength = 3\
      self.intelligence = 3\
      self.stealth = 3\
    def taunt(self):\
      print "You want a piece of me?"\
# create an instance of a human, pass in a clan name\
michael = Human('CodingDojo')\
jimmy = Human('CodingNinjas')\
\
\pard\pardeftab720\sl480\sa80\partightenfactor0

\b \cf0 Default Parameter Values\

\b0 class Test(object):\
  def __init__(self, phrase='Nothing was passed'):     # set the default value for 'phrase' parameter\
    print "This string was passed in: " + phrase\
    self.phrase = phrase\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\b\fs32 \cf0 ====================\
CHAINING METHODS\
====================
\b0\fs28 \
The way you have Python return its own instance is to do something like this\
\
class Bike(object):\
  def ride(self):\
    // your code goes here...\
    return self\
\
====================\
\
====================\
\
====================\
}