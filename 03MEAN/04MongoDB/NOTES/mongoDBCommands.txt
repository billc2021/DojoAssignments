Show all databases
	show dbs

Show current database
	db

Change to another/Create a database
	use <db_name>

Delete database
	db.dropDatabase() (will delete the current database in use)


COLLETIONS
View all collections
	show collections

Create a new collection
	db.createCollection(name, options)
	db.createCollection(<collection_name>)

Destroy a collection
	db.<collection_name>.drop()


CRUD OPERATIONS
CREATE - Inserting a document into a collection:
// Pattern:
db.COLLECTION_NAME.insert({YOUR_JSON_DOCUMENT})  
 
// Example:
db.ninjas.insert({name: "Trey", belt: "black", status: "awesome"})


READ - Retrieving documents from a collection:
// Pattern: 
db.COLLECTION_NAME.find({YOUR_QUERY_DOCUMENT})

// Example:
db.ninjas.find({name: "Trey"})


DESTROY - Removing documents from a collection:
// Pattern:
db.COLLECTION_NAME.remove({YOUR_QUERY_DOCUMENT}, BOOLEAN)

// Example
db.ninjas.remove({belt: "yellow"})
db.ninjas.remove({belt: "yellow"}, false) // this query would have the same effect as the one above.


UPDATE - Updating documents in a collection:
// Example: (this will delete the current document’s content and replace it with what’s below)
db.ninjas.update({name: "Trey"}, {location: "Mountain View"})

// Example:
db.ninjas.find({location: "Mountain View"}).pretty() 


// Pattern: (this will only add/update the info entered USE IT INSTEAD OF THE ONE ABOVE)
db.COLLECTION_NAME.update({QUERY}, {FIELDS_TO_UPDATE}, {OPTIONS})  
// Note: the options document is optional

// Example:
db.ninjas.update({name: "Trey"}, {$set: {location: "Mountain View"}})


Operators
$gt (greater than) - Use to query selectively on numerical-valued fields
EX: db.dojos.find({number_of_students: {$gt: 15}})

$gte (greater than or equal to) - Use to query selectively on numerical-valued fields

$lt (less than) - Use to query selectively on numerical-valued fields

$lte (less than or equal to) - Use to query selectively on numerical-valued fields

$in (in array) - Use to find documents who have a particular value within an array.

Operators with arrays
$push - Push to an array contained within a document.

$pop	- Removes either the first or last element from an array. 
	EX: db.COLLECTION.update({QUERY}, {$pop: {array_key: (1 or -1)}})
  
	Use 1 for the last item in the array, -1 for the first item.

$addToSet - It functions just like $push.  However, $addToSet only adds to the specified array if the value doesn't already exist (thereby preventing duplicate entries).

$pull - Removes a specified value from an array, unlike $pop, which removes by location. 
	Ex: db.COLLECTION.update({QUERY}, {$pull: {array_key: VALUE}})
  
	This will remove all instances of VALUE from the documents with the array specified by the array_key that match QUERY.

